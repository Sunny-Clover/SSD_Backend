services:
  api:
    build: .
    container_name: fastapi_app
    command: bash -c "while !</dev/tcp/db/3306; do sleep 1; done; uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload & while ! curl -s http://localhost:8000/docs > /dev/null; do echo 'Waiting for API...'; sleep 2; done; python /app/app/api_simulation.py && tail -f /dev/null"
    # command: bash -c 'while !</dev/tcp/db/3306; do sleep 1; done; uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload'
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=mysql+pymysql://user:password@db:3306/mysql_db
    volumes:
      - ./app:/app/app # 掛載後端目錄
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_DATABASE: mysql_db
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./SSD_SQL/SSDSetup.sql:/docker-entrypoint-initdb.d/SSDSetup.sql  # 初始化資料庫
      - ./SSD_SQL/InsertDetection.sql:/docker-entrypoint-initdb.d/InsertDetection.sql  # 初始化SP
      # - ./mysql_data:/var/lib/mysql  # 掛載持久化數據
    # ports:
    #   - "3306:3306"
  # simulate:
  #   build: .
  #   container_name: api_simulation
  #   command: bash -c "while ! curl -s http://fastapi_app:8000/docs > /dev/null; do echo 'Waiting for API...'; sleep 2; done; python /app/api_simulation.py"
  #   environment:
  #     - DATABASE_URL=mysql+pymysql://user:password@db:3306/mysql_db
  #   depends_on:
  #     api:
  #       condition: service_started
  #   volumes:
  #     - ./app:/app
